buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }

    repositories {
        mavenLocal()
        maven {
            url 'http://testm.ahaschool.com:9200/nexus/content/groups/public/'
        }
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenLocal()
    maven {
        mavenLocal()
        url 'http://testm.ahaschool.com:9200/nexus/content/groups/public/'
        maven { url 'http://testm.ahaschool.com:9200/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/libs-milestone' }
        maven { url 'https://jitpack.io' }
    }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.RELEASE'
    }
}

def springBootVersion = '2.0.3.RELEASE'

dependencies {
    // 3-part tool dependency
    compile("com.google.guava:guava:23.0")
    compile("org.apache.commons:commons-lang3:3.7")
    compile("com.alibaba:fastjson:1.2.47")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.4")


    // springboot
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}")

    // spring cloud
    compile("org.springframework.cloud:spring-cloud-starter-config:2.0.1.RELEASE")
    compile("org.springframework.cloud:spring-cloud-starter-openfeign")
    compile("com.netflix.feign:feign-jackson:8.18.0")

    // swagger dependency
    compile("io.springfox:springfox-swagger2:2.8.0")
    compile("io.springfox:springfox-swagger-ui:2.8.0")

    // redis dependency
    compile("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    compile("org.apache.commons:commons-pool2:2.5.0")
    compile("org.redisson:redisson:3.9.1")

    // kafka dependency
    compile("org.springframework.kafka:spring-kafka:2.1.7.RELEASE")

    // jdbc dependency
    compile("hikari-cp:hikari-cp:2.6.0")
    compile("com.github.pagehelper:pagehelper-spring-boot-starter:1.2.5") {
        exclude group: 'org.mybatis', module: 'mybatis'
    }
    compile("tk.mybatis:mapper-spring-boot-starter:2.0.3")
    compile("mysql:mysql-connector-java:5.1.46")

    compileOnly("org.projectlombok:lombok:1.18.2")

    // http
    compile("org.apache.httpcomponents:httpclient:4.5.6")
    compile("org.apache.httpcomponents:httpcore:4.4.10")

    // apollo config center
    compile("com.ctrip.framework.apollo:apollo-client:1.0.0")

    // nacos register center
    compile("org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:0.9.0.RELEASE")

    // metrics
    compile("io.micrometer:micrometer-registry-prometheus:1.0.5")
    // cat
    compile("com.dianping.cat:cat-client:3.0.0")
}

//打包源码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


def name = 'aha-commons-config'
version = '1.7.1'
def group = 'com.aha.public'

//上传jar命令 gradle publish
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "$group"
            artifactId = "$name"
            version = "$project.version"
            from components.java
            artifact sourcesJar

            tasks.withType(Jar) {
                from(project.projectDir) {
                    include 'LICENSE.md'
                    into 'META-INF'
                }
            }
        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            url = "http://testm.ahaschool.com:9200/nexus/content/repositories/huijiame_repo/"
            //认证用户和密码
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}
